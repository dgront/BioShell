warning: /Users/dgront/src.git/bioshell4/bioshell-pdb/Cargo.toml: dependency (rand_distr) specified without providing a local path, Git repository, version, or workspace dependency to use. This will be considered an error in future versions
warning: /Users/dgront/src.git/bioshell4/bioshell-numerical/Cargo.toml: dependency (rand_distr) specified without providing a local path, Git repository, version, or workspace dependency to use. This will be considered an error in future versions
warning: method `get_key` is never used
  --> bioshell-pdb/src/pdb_helix.rs:17:8
   |
16 | impl PdbHelix {
   | ------------- method in this implementation
17 |     fn get_key(&self) -> String {
   |        ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: method `get_key` is never used
  --> bioshell-pdb/src/pdb_sheet.rs:17:8
   |
16 | impl PdbSheet {
   | ------------- method in this implementation
17 |     fn get_key(&self) -> String {
   |        ^^^^^^^

warning: `bioshell-pdb` (lib) generated 2 warnings
   Compiling surpass v4.0.0-dev (/Users/dgront/src.git/bioshell4/surpass)
warning: unused macro definition: `real_to_int`
  --> surpass/src/system.rs:31:14
   |
31 | macro_rules! real_to_int {
   |              ^^^^^^^^^^^
   |
   = note: `#[warn(unused_macros)]` on by default

warning: unused macro definition: `int_to_real`
  --> surpass/src/system.rs:42:14
   |
42 | macro_rules! int_to_real {
   |              ^^^^^^^^^^^

warning: value assigned to `moved_from` is never read
  --> surpass/src/movers.rs:45:17
   |
45 |         let mut moved_from = 0;
   |                 ^^^^^^^^^^
   |
   = help: maybe it is overwritten before being read?
   = note: `#[warn(unused_assignments)]` on by default

warning: value assigned to `moved_to` is never read
  --> surpass/src/movers.rs:46:17
   |
46 |         let mut moved_to = HINGE_MOVE_SIZE + 1;
   |                 ^^^^^^^^
   |
   = help: maybe it is overwritten before being read?

warning: unused variable: `o`
  --> surpass/src/movers.rs:88:13
   |
88 |         for o in 0..self.outer_steps {
   |             ^ help: if this is intentional, prefix it with an underscore: `_o`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `i`
  --> surpass/src/movers.rs:89:17
   |
89 |             for i in 0..self.inner_steps {
   |                 ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable `sum_d2` is assigned to, but never used
  --> surpass/src/contact_energy.rs:15:17
   |
15 |         let mut sum_d2: f64;
   |                 ^^^^^^
   |
   = note: consider using `_sum_d2` instead

warning: value assigned to `sum_d2` is never read
  --> surpass/src/contact_energy.rs:21:88
   |
21 |             diff_squared_or_continue!(move_prop.moved_caz[i_moved], conf.caz[i_chain], sum_d2, self.r_max);
   |                                                                                        ^^^^^^
   |
   = help: maybe it is overwritten before being read?

warning: variable does not need to be mutable
  --> surpass/src/contact_energy.rs:14:13
   |
14 |         let mut en = 0.0;
   |             ----^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

error[E0507]: cannot move out of `move_prop.moved_range` which is behind a shared reference
   --> surpass/src/contact_energy.rs:16:24
    |
16  |         for i_chain in move_prop.moved_range {
    |                        ^^^^^^^^^^^^^^^^^^^^^
    |                        |
    |                        `move_prop.moved_range` moved due to this implicit call to `.into_iter()`
    |                        move occurs because `move_prop.moved_range` has type `std::ops::Range<usize>`, which does not implement the `Copy` trait
    |
note: `into_iter` takes ownership of the receiver `self`, which moves `move_prop.moved_range`
   --> /Users/dgront/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:271:18
    |
271 |     fn into_iter(self) -> Self::IntoIter;
    |                  ^^^^

For more information about this error, try `rustc --explain E0507`.
warning: `surpass` (lib) generated 9 warnings
error: could not compile `surpass` (lib) due to previous error; 9 warnings emitted
