use bioshell_ff::{Coordinates, System};
use bioshell_ff::nonbonded::{ArgonRules, NbList};
use bioshell_sim::generators::cubic_grid_atoms;

fn create_test_system(n_atoms: usize, box_length: f64) -> CartesianSystem {

    const ATOM_RADIUS: f64 = 2.0;
    const NBLIST_BUFFER: f64 = 4.0;
    let mut coords = Coordinates::new(n_atoms);
    coords.set_box_len(box_length);
    cubic_grid_atoms(&mut coords);

    // ---------- Create system's list of neighbors
    let nbl: NbList = NbList::new(ATOM_RADIUS, NBLIST_BUFFER, Box::new(ArgonRules {}));

    // ---------- Create and return the system
    return CartesianSystem::new(coords, nbl);
}

#[test]
fn test_SingleAtomMove() {


    // ---------- Create system's list of neighbors
    let nbl:NbList = NbList::new(CUTOFF as f64,4.0,Box::new(ArgonRules{}));

    // ---------- Create the system
    let mut system: CartesianSystem = create_test_system(8, 6.0);

    // ---------- Create energy function - just the LJ term
    let kernel = SimpleContact::new(0.0,0.0,0.0,0.0,0.0);
    let pairwise = PairwiseNonbondedEvaluator::new(0.0,kernel);

}