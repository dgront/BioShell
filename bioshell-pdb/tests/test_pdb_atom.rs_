#[cfg(test)]
mod tests {
    use bioshell_numerical::Vec3;
    use bioshell_pdb::PdbAtom;

    #[test]
    fn test_new() {
        let atom = PdbAtom::new();
        assert_eq!(atom.atom_serial_no_1, Some(0));
        assert_eq!(atom.atom_symbol_2, "");
        assert_eq!(atom.atom_position_3, "");
        assert_eq!(atom.atom_no_in_the_branch_4, Some(0));
        assert_eq!(atom.connected_to_atom_no_5, Some(0));
        assert_eq!(atom.alt_loc_indicator_6, "");
        assert_eq!(atom.residue_name_7, "");
        assert_eq!(atom.chain_name_8, "");
        assert_eq!(atom.residue_no_9, Some(0));
        assert_eq!(atom.insertion_code_10, "");
        assert_eq!(atom.coordinate_11.x, 0.0);
        assert_eq!(atom.coordinate_11.y, 0.0);
        assert_eq!(atom.coordinate_11.z, 0.0);
        assert_eq!(atom.occupancy_12, Some(0.0));
        assert_eq!(atom.temperature_factor_13, Some(0.0));
        assert_eq!(atom.segment_identifier_14, "");
        assert_eq!(atom.segment_identifier_symbol_15, "");
        assert_eq!(atom.charge_of_the_atom_16, "");
    }

    #[test]
    fn test_parse() {
        let atom_line = "ATOM   2831  OE1 GLN A 294     -27.117  12.343  28.479  1.00  9.58           O  ";
        let atom = PdbAtom::parse(atom_line);
        assert_eq!(atom.atom_serial_no_1, Some(2831));
        assert_eq!(atom.atom_symbol_2, "O");
        assert_eq!(atom.atom_position_3, "E");
        assert_eq!(atom.atom_no_in_the_branch_4, Some(1));
        assert_eq!(atom.connected_to_atom_no_5, Some(0));
        assert_eq!(atom.alt_loc_indicator_6, "");
        assert_eq!(atom.residue_name_7, "GLN");
        assert_eq!(atom.chain_name_8, "A");
        assert_eq!(atom.residue_no_9, Some(294));
        assert_eq!(atom.insertion_code_10, "");
        assert_eq!(atom.coordinate_11.x, -27.117);
        assert_eq!(atom.coordinate_11.y, 12.343);
        assert_eq!(atom.coordinate_11.z, 28.479);
        assert_eq!(atom.occupancy_12, Some(1.0));
        assert_eq!(atom.temperature_factor_13, Some(9.58));
        assert_eq!(atom.segment_identifier_14, "");
        assert_eq!(atom.segment_identifier_symbol_15, "O");
        assert_eq!(atom.charge_of_the_atom_16, "");
    }
}